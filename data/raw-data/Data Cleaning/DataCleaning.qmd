---
title: "Data Cleaning"
author: "Aiden Sutherland"
format: html
editor: visual
---

```{r}
library(tidyverse) 
library(lubridate) 
library(ggpubr)    
library(patchwork) 
library(hrbrthemes)
library(ggalt)     
library(extrafont) 
library(readr)
library(dplyr)

```

Loading in data sets for the project, This data is from 2019, as I could not find other data sets that were available with this much detail from a more recent year.

```{r}
VideoGames <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv") %>%
  mutate(release_date = as.Date(release_date, "%b %d, %Y")) %>%
  distinct(game, developer, publisher, .keep_all = TRUE)

MetacriticGames <- read_csv("~/GitHub/Sutherland-PII-project/data/raw-data/result.csv",trim_ws = TRUE)
names(MetacriticGames)[names(MetacriticGames) == "name"] <- "game"
class_game <- read_csv("~/GitHub/Sutherland-PII-project/data/raw-data/class_game.csv")

```

Here is where I join the 2 data sets by the game column, as we do not need the number column since they'll already be numbered. Since there were many different names for Warner Brothers, the source from what I attained the data set advised to change all of them to just "Warner Bros". Also deleted duplicate submissions.

```{r}
 games <- MetacriticGames %>%
  filter(console=="PC") %>% 
  inner_join(VideoGames,by = "game") %>%
  mutate(owners=parse_number(owners,trim_ws = TRUE)) %>%
  mutate(publisher = case_when(str_detect(publisher,pattern = "Warner Bros|WB")~"Warner Brothers",TRUE~publisher)) %>%
  dplyr::select(-c(number,metascore.y))
games <- games %>%
  inner_join(class_game, by = 'game')
games$class <- factor(games$class, levels = c("AAA", "indie"))
games$userscore <- as.numeric(as.character(games$userscore))
games$developer <- as.factor(games$developer)
```

Here I filter out all of the games and publishers to only get the top 25 publishers for the year.

```{r}
top_25_publishers <- games %>% 
  group_by(publisher) %>% 
  summarise(Owners=sum(owners)) %>% 
  top_n(25)
#Filtering games based on top 25 publishers
top_25_filtered <- games %>% 
  semi_join(top_25_publishers)
```

Here I make a data set containing only the top 25 games of the year by user score, which is what I am really trying to measure in this project. I filtered out user scores that were left 'tbd'.

```{r}
games <- games %>% filter(userscore != "tbd")
top_25_userscore <- games %>% 
  arrange(desc(as.numeric(userscore))) %>% 
  slice(1:25)
```

Here is another object with the top 25 average playtime per player since its release to 2019.

```{r}
top_25_average_play <- games %>% 
  arrange(desc(as.numeric(average_playtime))) %>% 
  slice(1:25)
```

Again by median playtime

```{r}
top_25_med_play <- games %>% 
  arrange(desc(as.numeric(median_playtime))) %>% 
  slice(1:25)
```

And again by owners

```{r}
top_25_owners <- games %>% 
  arrange(desc(as.numeric(owners))) %>% 
  slice(1:25)
```

For the top 25 of each of the different variables, there are only 56 different games I will be working with for this project, If the analysis is not enough I will return and up it to 50.

To find the class for each game I used this link and searched each title: https://www.moddb.com/search

```{r}
save(top_25_average_play, file = 'cleaned_data1.RData')
save(top_25_med_play, file = 'cleaned_data2.RData')
save(top_25_userscore, file = 'cleaned_data3.RData')
save(top_25_owners, file = 'cleaned_data4.RData')
save(games, file = 'cleaned_games.RData')
```
